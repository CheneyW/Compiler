I0
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  # 
L -> .L M S  	,  # 
P -> .L  	,  # 
L -> .S  	,  # 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  # 
S -> .id = str ;  	,  # 
S -> .D ;  	,  # 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  # 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  # 
P' -> .P  	,  # 
S -> .D ;  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S -> .id = E ;  	,  # 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  # 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  # 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I1
S ->  call.id ( Elist ) ;  	,  call void id String while if return int 
S ->  call.id ( Elist ) ;  	,  # 

I2
L ->  S.  	,  call void id String while if return int 
L ->  S.  	,  # 

I3
factor -> .( E )  	,  * 
S ->  return.E ;  	,  # 
item -> .item / factor  	,  * 
item -> .factor  	,  ; 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
S ->  return.E ;  	,  call void id String while if return int 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  ; 
E -> .E - item  	,  - 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ; 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  ; 
E -> .item  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ; 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .id  	,  * 
E -> .E + item  	,  ; 
E -> .E + item  	,  - 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ; 
item -> .item * factor  	,  * 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I4
D ->  T.id  	,  ; 
S ->  T.id ( M' para ) { L }  	,  call void id String while if return int 
S ->  T.id ( M' para ) { L }  	,  # 

I5
T ->  void.  	,  id 

I6
P' ->  P.  	,  # 

I7
S ->  D.;  	,  # 
S ->  D.;  	,  call void id String while if return int 

I8
S ->  if.( B ) { M L }  	,  # 
S ->  if.( B ) { M L } N else { M L }  	,  call void id String while if return int 
S ->  if.( B ) { M L } N else { M L }  	,  # 
S ->  if.( B ) { M L }  	,  call void id String while if return int 

I9
S ->  while.( M B ) { M L }  	,  call void id String while if return int 
S ->  while.( M B ) { M L }  	,  # 

I10
S ->  id.= str ;  	,  call void id String while if return int 
S ->  id.= E ;  	,  # 
S ->  id.= str ;  	,  # 
S ->  id.= E ;  	,  call void id String while if return int 

I11
T ->  int.  	,  id 

I12
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  # 
P ->  L.  	,  # 
M -> .  	,  call void id String while if return int 

I13
T ->  String.[ const ]  	,  id 

I14
S ->  return E.;  	,  # 
E ->  E.- item  	,  ; 
E ->  E.- item  	,  - 
E ->  E.- item  	,  + 
S ->  return E.;  	,  call void id String while if return int 
E ->  E.+ item  	,  ; 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I15
T ->  String [.const ]  	,  id 

I16
S ->  T id.( M' para ) { L }  	,  call void id String while if return int 
S ->  T id.( M' para ) { L }  	,  # 
D ->  T id.  	,  ; 

I17
S ->  D ;.  	,  # 
S ->  D ;.  	,  call void id String while if return int 

I18
factor ->  id.  	,  ; 
factor ->  id.  	,  - 
factor ->  id.  	,  + 
factor ->  id.  	,  / 
factor ->  id.  	,  * 

I19
S ->  call id.( Elist ) ;  	,  call void id String while if return int 
S ->  call id.( Elist ) ;  	,  # 

I20
factor ->  const.  	,  * 
factor ->  const.  	,  ; 
factor ->  const.  	,  - 
factor ->  const.  	,  + 
factor ->  const.  	,  / 

I21
E ->  item.  	,  ; 
E ->  item.  	,  - 
E ->  item.  	,  + 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  ; 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  ; 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 

I22
item ->  factor.  	,  ; 
item ->  factor.  	,  - 
item ->  factor.  	,  + 
item ->  factor.  	,  / 
item ->  factor.  	,  * 

I23
factor -> .( E )  	,  * 
Ba -> .Ba && M Bb  	,  && 
Ba -> .Ba && M Bb  	,  || 
Ba -> .Bb  	,  ) 
item -> .factor  	,  / 
item -> .factor  	,  + 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .id  	,  / 
factor -> .id  	,  + 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
S ->  if (.B ) { M L }  	,  call void id String while if return int 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
Bc -> .E relop E  	,  || 
Bc -> .E relop E  	,  && 
E -> .item  	,  + 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
E -> .E - item  	,  == <= != < > >= 
B -> .Ba  	,  ) 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
B -> .B || M Ba  	,  ) 
Bb -> .! Bb  	,  ) 
S ->  if (.B ) { M L }  	,  # 
B -> .Ba  	,  || 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  - 
S ->  if (.B ) { M L } N else { M L }  	,  # 
E -> .item  	,  - 
Ba -> .Bb  	,  && 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
Ba -> .Bb  	,  || 
Ba -> .Ba && M Bb  	,  ) 
E -> .item  	,  == <= != < > >= 
B -> .B || M Ba  	,  || 
S ->  if (.B ) { M L } N else { M L }  	,  call void id String while if return int 
item -> .factor  	,  == <= != < > >= 
Bc -> .( B )  	,  || 
factor -> .id  	,  * 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I24
factor ->  call.id ( Elist )  	,  * 
factor ->  call.id ( Elist )  	,  ; 
factor ->  call.id ( Elist )  	,  - 
factor ->  call.id ( Elist )  	,  + 
factor ->  call.id ( Elist )  	,  / 

I25
L ->  L M.S  	,  # 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
D -> .T id  	,  ; 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
S -> .return E ;  	,  # 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S -> .id = E ;  	,  # 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  # 
S -> .id = str ;  	,  # 
S -> .D ;  	,  # 
L ->  L M.S  	,  call void id String while if return int 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  # 
T -> .int  	,  id 
S -> .while ( M B ) { M L }  	,  # 
S -> .T id ( M' para ) { L }  	,  # 
S -> .D ;  	,  call void id String while if return int 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  # 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I26
factor -> .( E )  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor ->  (.E )  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  (.E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor ->  (.E )  	,  ; 
factor ->  (.E )  	,  + 
factor ->  (.E )  	,  / 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I27
M -> .  	,  call ! const true ( false id 
S ->  while (.M B ) { M L }  	,  # 
S ->  while (.M B ) { M L }  	,  call void id String while if return int 

I28
factor -> .( E )  	,  * 
S ->  id =.str ;  	,  # 
item -> .item / factor  	,  * 
item -> .factor  	,  ; 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  ; 
E -> .E - item  	,  - 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ; 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  ; 
E -> .item  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ; 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
S ->  id =.E ;  	,  # 
S ->  id =.str ;  	,  call void id String while if return int 
factor -> .id  	,  * 
S ->  id =.E ;  	,  call void id String while if return int 
E -> .E + item  	,  ; 
E -> .E + item  	,  - 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ; 
item -> .item * factor  	,  * 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I29
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ; 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ; 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  ; 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
E ->  E +.item  	,  ; 
E ->  E +.item  	,  - 
E ->  E +.item  	,  + 
factor -> .const  	,  ; 
factor -> .const  	,  - 
factor -> .const  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I30
factor -> .( E )  	,  * 
item ->  item /.factor  	,  * 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item ->  item /.factor  	,  ; 
item ->  item /.factor  	,  - 
item ->  item /.factor  	,  + 
item ->  item /.factor  	,  / 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ; 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I31
S ->  id = E.;  	,  # 
E ->  E.- item  	,  ; 
E ->  E.- item  	,  - 
E ->  E.- item  	,  + 
S ->  id = E.;  	,  call void id String while if return int 
E ->  E.+ item  	,  ; 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I32
factor -> .( E )  	,  * 
item -> .factor  	,  / 
item -> .factor  	,  + 
Bb ->  !.Bb  	,  ) 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .id  	,  / 
factor -> .id  	,  + 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
Bc -> .E relop E  	,  || 
Bc -> .E relop E  	,  && 
E -> .item  	,  + 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
E -> .E - item  	,  == <= != < > >= 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
Bb -> .! Bb  	,  ) 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  - 
E -> .item  	,  - 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
E -> .item  	,  == <= != < > >= 
Bb ->  !.Bb  	,  && 
item -> .factor  	,  == <= != < > >= 
Bb ->  !.Bb  	,  || 
Bc -> .( B )  	,  || 
factor -> .id  	,  * 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I33
Bb ->  Bc.  	,  && 
Bb ->  Bc.  	,  ) 
Bb ->  Bc.  	,  || 

I34
S ->  return E ;.  	,  # 
S ->  return E ;.  	,  call void id String while if return int 

I35
factor ->  call.id ( Elist )  	,  * 
factor ->  call.id ( Elist )  	,  + 
factor ->  call.id ( Elist )  	,  / 
factor ->  call.id ( Elist )  	,  ) 
factor ->  call.id ( Elist )  	,  - 

I36
factor ->  const.  	,  * 
factor ->  const.  	,  - 
factor ->  const.  	,  / 
factor ->  const.  	,  + 
factor ->  const.  	,  == <= != < > >= 

I37
B ->  Ba.  	,  || 
Ba ->  Ba.&& M Bb  	,  || 
Ba ->  Ba.&& M Bb  	,  && 
B ->  Ba.  	,  ) 
Ba ->  Ba.&& M Bb  	,  ) 

I38
factor -> .( E )  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor ->  (.E )  	,  ) 
factor ->  (.E )  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  (.E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor ->  (.E )  	,  + 
factor ->  (.E )  	,  / 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I39
factor -> .( E )  	,  * 
Ba -> .Ba && M Bb  	,  && 
Ba -> .Ba && M Bb  	,  || 
Ba -> .Bb  	,  ) 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .call id ( Elist )  	,  == <= != < > >= 
Bc ->  (.B )  	,  ) 
factor -> .id  	,  + 
factor -> .id  	,  / 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor ->  (.E )  	,  - 
Bc -> .E relop E  	,  || 
E -> .item  	,  + 
Bc -> .E relop E  	,  && 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
Bc ->  (.B )  	,  && 
E -> .E - item  	,  == <= != < > >= 
Bc ->  (.B )  	,  || 
B -> .Ba  	,  ) 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  (.E )  	,  * 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
B -> .B || M Ba  	,  ) 
Bb -> .! Bb  	,  ) 
B -> .Ba  	,  || 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  ) 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor ->  (.E )  	,  / 
factor ->  (.E )  	,  + 
E -> .item  	,  ) 
E -> .item  	,  - 
factor ->  (.E )  	,  == <= != < > >= 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
Ba -> .Bb  	,  && 
Ba -> .Bb  	,  || 
Ba -> .Ba && M Bb  	,  ) 
E -> .item  	,  == <= != < > >= 
B -> .B || M Ba  	,  || 
item -> .factor  	,  == <= != < > >= 
factor -> .id  	,  * 
Bc -> .( B )  	,  || 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I40
factor ->  id.  	,  == <= != < > >= 
factor ->  id.  	,  / 
factor ->  id.  	,  + 
factor ->  id.  	,  - 
factor ->  id.  	,  * 

I41
factor ->  const.  	,  * 
factor ->  const.  	,  ) 
factor ->  const.  	,  - 
factor ->  const.  	,  + 
factor ->  const.  	,  / 

I42
factor -> .( E )  	,  * 
Ba -> .Ba && M Bb  	,  && 
Ba -> .Ba && M Bb  	,  || 
Ba -> .Bb  	,  ) 
item -> .factor  	,  / 
item -> .factor  	,  + 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .id  	,  / 
factor -> .id  	,  + 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
Bc -> .E relop E  	,  || 
Bc -> .E relop E  	,  && 
E -> .item  	,  + 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
S ->  while ( M.B ) { M L }  	,  call void id String while if return int 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
E -> .E - item  	,  == <= != < > >= 
S ->  while ( M.B ) { M L }  	,  # 
B -> .Ba  	,  ) 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
B -> .B || M Ba  	,  ) 
Bb -> .! Bb  	,  ) 
B -> .Ba  	,  || 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  - 
E -> .item  	,  - 
Ba -> .Bb  	,  && 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
Ba -> .Bb  	,  || 
Ba -> .Ba && M Bb  	,  ) 
E -> .item  	,  == <= != < > >= 
B -> .B || M Ba  	,  || 
item -> .factor  	,  == <= != < > >= 
Bc -> .( B )  	,  || 
factor -> .id  	,  * 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I43
item ->  factor.  	,  + 
item ->  factor.  	,  / 
item ->  factor.  	,  * 
item ->  factor.  	,  ) 
item ->  factor.  	,  - 

I44
E ->  item.  	,  + 
E ->  item.  	,  - 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  / 
item ->  item./ factor  	,  + 
E ->  item.  	,  == <= != < > >= 
item ->  item./ factor  	,  == <= != < > >= 
item ->  item.* factor  	,  == <= != < > >= 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  * 

I45
Bc ->  false.  	,  && 
Bc ->  false.  	,  ) 
Bc ->  false.  	,  || 

I46
E ->  item.  	,  + 
E ->  item.  	,  ) 
E ->  item.  	,  - 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  * 

I47
factor ->  ( E.)  	,  - 
factor ->  ( E.)  	,  * 
factor ->  ( E.)  	,  ; 
factor ->  ( E.)  	,  + 
factor ->  ( E.)  	,  / 
E ->  E.- item  	,  + 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I48
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ; 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
E ->  E -.item  	,  ; 
E ->  E -.item  	,  - 
E ->  E -.item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ; 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  ; 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ; 
factor -> .const  	,  - 
factor -> .const  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I49
Bc ->  true.  	,  || 
Bc ->  true.  	,  && 
Bc ->  true.  	,  ) 

I50
item ->  factor.  	,  / 
item ->  factor.  	,  + 
item ->  factor.  	,  * 
item ->  factor.  	,  - 
item ->  factor.  	,  == <= != < > >= 

I51
S ->  T id (.M' para ) { L }  	,  call void id String while if return int 
S ->  T id (.M' para ) { L }  	,  # 
M' -> .  	,  void String int 

I52
factor ->  call id.( Elist )  	,  * 
factor ->  call id.( Elist )  	,  ; 
factor ->  call id.( Elist )  	,  - 
factor ->  call id.( Elist )  	,  + 
factor ->  call id.( Elist )  	,  / 

I53
factor -> .( E )  	,  * 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
item ->  item *.factor  	,  ; 
item ->  item *.factor  	,  - 
item ->  item *.factor  	,  + 
item ->  item *.factor  	,  / 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor -> .id  	,  * 
item ->  item *.factor  	,  * 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ; 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I54
Ba ->  Bb.  	,  ) 
Ba ->  Bb.  	,  && 
Ba ->  Bb.  	,  || 

I55
factor ->  id.  	,  + 
factor ->  id.  	,  / 
factor ->  id.  	,  ) 
factor ->  id.  	,  - 
factor ->  id.  	,  * 

I56
S ->  if ( B.) { M L } N else { M L }  	,  # 
S ->  if ( B.) { M L } N else { M L }  	,  call void id String while if return int 
B ->  B.|| M Ba  	,  || 
S ->  if ( B.) { M L }  	,  call void id String while if return int 
B ->  B.|| M Ba  	,  ) 
S ->  if ( B.) { M L }  	,  # 

I57
Bc ->  E.relop E  	,  || 
Bc ->  E.relop E  	,  && 
Bc ->  E.relop E  	,  ) 
relop -> .>  	,  call const ( id 
relop -> .==  	,  call const ( id 
relop -> .>=  	,  call const ( id 
E ->  E.+ item  	,  == <= != < > >= 
relop -> .<  	,  call const ( id 
E ->  E.- item  	,  == <= != < > >= 
relop -> .<=  	,  call const ( id 
E ->  E.- item  	,  + 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 
relop -> .!=  	,  call const ( id 

I58
factor ->  call.id ( Elist )  	,  * 
factor ->  call.id ( Elist )  	,  / 
factor ->  call.id ( Elist )  	,  + 
factor ->  call.id ( Elist )  	,  - 
factor ->  call.id ( Elist )  	,  == <= != < > >= 

I59
T ->  String [ const.]  	,  id 

I60
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
S ->  call id (.Elist ) ;  	,  # 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
S ->  call id (.Elist ) ;  	,  call void id String while if return int 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I61
L ->  L M S.  	,  # 
L ->  L M S.  	,  call void id String while if return int 

I62
S ->  id = str.;  	,  # 
S ->  id = str.;  	,  call void id String while if return int 

I63
D -> .T id  	,  ) 
D -> .T id  	,  , 
S ->  T id ( M'.para ) { L }  	,  # 
T -> .void  	,  id 
T -> .int  	,  id 
T -> .String [ const ]  	,  id 
para -> .D  	,  ) 
para -> .D  	,  , 
para -> .para , D  	,  ) 
para -> .para , D  	,  , 
S ->  T id ( M'.para ) { L }  	,  call void id String while if return int 

I64
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  ; 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  ; 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 
E ->  E - item.  	,  ; 
E ->  E - item.  	,  - 
E ->  E - item.  	,  + 

I65
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  ) 
item -> .factor  	,  - 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  / 
E ->  E -.item  	,  + 
E ->  E -.item  	,  ) 
E ->  E -.item  	,  - 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  / 
item -> .item / factor  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I66
factor ->  ( E.)  	,  ) 
factor ->  ( E.)  	,  - 
factor ->  ( E.)  	,  * 
factor ->  ( E.)  	,  + 
factor ->  ( E.)  	,  / 
E ->  E.- item  	,  + 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I67
factor ->  call.id ( Elist )  	,  * 
factor ->  call.id ( Elist )  	,  + 
factor ->  call.id ( Elist )  	,  / 
factor ->  call.id ( Elist )  	,  , 
factor ->  call.id ( Elist )  	,  ) 
factor ->  call.id ( Elist )  	,  - 

I68
relop ->  <=.  	,  call const ( id 

I69
item ->  factor.  	,  + 
item ->  factor.  	,  / 
item ->  factor.  	,  * 
item ->  factor.  	,  ) 
item ->  factor.  	,  - 
item ->  factor.  	,  , 

I70
factor ->  call id.( Elist )  	,  * 
factor ->  call id.( Elist )  	,  + 
factor ->  call id.( Elist )  	,  / 
factor ->  call id.( Elist )  	,  ) 
factor ->  call id.( Elist )  	,  - 

I71
Bc ->  E.relop E  	,  || 
factor ->  ( E.)  	,  - 
Bc ->  E.relop E  	,  && 
factor ->  ( E.)  	,  * 
Bc ->  E.relop E  	,  ) 
factor ->  ( E.)  	,  / 
factor ->  ( E.)  	,  + 
relop -> .>  	,  call const ( id 
relop -> .==  	,  call const ( id 
factor ->  ( E.)  	,  == <= != < > >= 
relop -> .>=  	,  call const ( id 
E ->  E.+ item  	,  == <= != < > >= 
relop -> .<  	,  call const ( id 
E ->  E.- item  	,  == <= != < > >= 
relop -> .<=  	,  call const ( id 
E ->  E.- item  	,  + 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 
relop -> .!=  	,  call const ( id 

I72
S ->  id = E ;.  	,  call void id String while if return int 
S ->  id = E ;.  	,  # 

I73
factor -> .( E )  	,  * 
E -> .item  	,  || 
E -> .item  	,  && 
item -> .factor  	,  / 
item -> .factor  	,  + 
item -> .item / factor  	,  || 
item -> .item / factor  	,  && 
factor -> .id  	,  / 
factor -> .id  	,  + 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
E -> .item  	,  + 
Bc ->  E relop.E  	,  && 
Bc ->  E relop.E  	,  || 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  && 
factor -> .id  	,  || 
E -> .E - item  	,  || 
item -> .item * factor  	,  && 
item -> .item * factor  	,  || 
E -> .E - item  	,  && 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .( E )  	,  && 
factor -> .( E )  	,  || 
Bc ->  E relop.E  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .const  	,  || 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
factor -> .call id ( Elist )  	,  || 
E -> .E + item  	,  && 
factor -> .call id ( Elist )  	,  && 
E -> .E + item  	,  || 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  && 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .factor  	,  || 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
item -> .factor  	,  && 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I74
factor -> .( E )  	,  * 
item ->  item /.factor  	,  * 
factor -> .call id ( Elist )  	,  == <= != < > >= 
item ->  item /.factor  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
factor -> .id  	,  / 
factor -> .id  	,  + 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  - 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
factor -> .( E )  	,  == <= != < > >= 
item ->  item /.factor  	,  - 
item ->  item /.factor  	,  / 
item ->  item /.factor  	,  + 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
factor -> .const  	,  / 
factor -> .const  	,  + 

I75
factor ->  id.  	,  == <= != < > >= 
factor ->  id.  	,  + 
factor ->  id.  	,  / 
factor ->  id.  	,  ) 
factor ->  id.  	,  - 
factor ->  id.  	,  * 

I76
factor ->  id.  	,  + 
factor ->  id.  	,  / 
factor ->  id.  	,  , 
factor ->  id.  	,  ) 
factor ->  id.  	,  - 
factor ->  id.  	,  * 

I77
factor ->  call id.( Elist )  	,  * 
factor ->  call id.( Elist )  	,  / 
factor ->  call id.( Elist )  	,  + 
factor ->  call id.( Elist )  	,  - 
factor ->  call id.( Elist )  	,  == <= != < > >= 

I78
relop ->  >=.  	,  call const ( id 

I79
S ->  id = str ;.  	,  # 
S ->  id = str ;.  	,  call void id String while if return int 

I80
Bc ->  ( B.)  	,  && 
Bc ->  ( B.)  	,  ) 
Bc ->  ( B.)  	,  || 
B ->  B.|| M Ba  	,  || 
B ->  B.|| M Ba  	,  ) 

I81
relop ->  <.  	,  call const ( id 

I82
factor ->  ( E ).  	,  - 
factor ->  ( E ).  	,  * 
factor ->  ( E ).  	,  ; 
factor ->  ( E ).  	,  + 
factor ->  ( E ).  	,  / 

I83
factor ->  const.  	,  * 
factor ->  const.  	,  ) 
factor ->  const.  	,  - 
factor ->  const.  	,  , 
factor ->  const.  	,  + 
factor ->  const.  	,  / 

I84
item ->  item * factor.  	,  ; 
item ->  item * factor.  	,  - 
item ->  item * factor.  	,  + 
item ->  item * factor.  	,  / 
item ->  item * factor.  	,  * 

I85
S ->  while ( M B.) { M L }  	,  call void id String while if return int 
S ->  while ( M B.) { M L }  	,  # 
B ->  B.|| M Ba  	,  || 
B ->  B.|| M Ba  	,  ) 

I86
factor -> .( E )  	,  * 
Ba -> .Ba && M Bb  	,  && 
Ba -> .Ba && M Bb  	,  || 
Ba -> .Bb  	,  ) 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .call id ( Elist )  	,  == <= != < > >= 
Bc ->  (.B )  	,  ) 
factor -> .id  	,  + 
factor -> .id  	,  / 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor ->  (.E )  	,  ) 
factor ->  (.E )  	,  - 
Bc -> .E relop E  	,  || 
E -> .item  	,  + 
Bc -> .E relop E  	,  && 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
Bc ->  (.B )  	,  && 
E -> .E - item  	,  == <= != < > >= 
Bc ->  (.B )  	,  || 
B -> .Ba  	,  ) 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  (.E )  	,  * 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
B -> .B || M Ba  	,  ) 
Bb -> .! Bb  	,  ) 
B -> .Ba  	,  || 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  ) 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor ->  (.E )  	,  + 
factor ->  (.E )  	,  / 
E -> .item  	,  ) 
E -> .item  	,  - 
factor ->  (.E )  	,  == <= != < > >= 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
Ba -> .Bb  	,  && 
Ba -> .Bb  	,  || 
Ba -> .Ba && M Bb  	,  ) 
E -> .item  	,  == <= != < > >= 
B -> .B || M Ba  	,  || 
item -> .factor  	,  == <= != < > >= 
factor -> .id  	,  * 
Bc -> .( B )  	,  || 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I87
Elist ->  E.  	,  ) 
Elist ->  E.  	,  , 
E ->  E.- item  	,  + 
E ->  E.- item  	,  , 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  , 
E ->  E.+ item  	,  + 

I88
M -> .  	,  call ! const true ( false id 
Ba ->  Ba &&.M Bb  	,  && 
Ba ->  Ba &&.M Bb  	,  || 
Ba ->  Ba &&.M Bb  	,  ) 

I89
E ->  item.  	,  + 
E ->  item.  	,  ) 
E ->  item.  	,  - 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
E ->  item.  	,  == <= != < > >= 
item ->  item./ factor  	,  == <= != < > >= 
item ->  item.* factor  	,  == <= != < > >= 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  * 

I90
Bb ->  ! Bb.  	,  || 
Bb ->  ! Bb.  	,  ) 
Bb ->  ! Bb.  	,  && 

I91
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
item -> .item / factor  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
E ->  E +.item  	,  == <= != < > >= 
item -> .item * factor  	,  == <= != < > >= 
item -> .factor  	,  == <= != < > >= 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
E ->  E +.item  	,  - 
E ->  E +.item  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I92
E ->  item.  	,  , 
E ->  item.  	,  + 
E ->  item.  	,  ) 
E ->  item.  	,  - 
item ->  item./ factor  	,  , 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  , 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  * 

I93
relop ->  ==.  	,  call const ( id 

I94
S ->  if ( B ).{ M L } N else { M L }  	,  # 
S ->  if ( B ).{ M L } N else { M L }  	,  call void id String while if return int 
S ->  if ( B ).{ M L }  	,  call void id String while if return int 
S ->  if ( B ).{ M L }  	,  # 

I95
relop ->  >.  	,  call const ( id 

I96
factor ->  call.id ( Elist )  	,  * 
factor ->  call.id ( Elist )  	,  + 
factor ->  call.id ( Elist )  	,  / 
factor ->  call.id ( Elist )  	,  ) 
factor ->  call.id ( Elist )  	,  - 
factor ->  call.id ( Elist )  	,  == <= != < > >= 

I97
factor -> .( E )  	,  * 
item ->  item /.factor  	,  * 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item ->  item /.factor  	,  ) 
item ->  item /.factor  	,  - 
item ->  item /.factor  	,  + 
item ->  item /.factor  	,  / 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I98
item ->  factor.  	,  + 
item ->  factor.  	,  / 
item ->  factor.  	,  * 
item ->  factor.  	,  ) 
item ->  factor.  	,  - 
item ->  factor.  	,  == <= != < > >= 

I99
item ->  item / factor.  	,  * 
item ->  item / factor.  	,  ; 
item ->  item / factor.  	,  - 
item ->  item / factor.  	,  + 
item ->  item / factor.  	,  / 

I100
factor ->  call id (.Elist )  	,  ; 
factor ->  call id (.Elist )  	,  + 
factor ->  call id (.Elist )  	,  / 
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  call id (.Elist )  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor ->  call id (.Elist )  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I101
M -> .  	,  call ! const true ( false id 
B ->  B ||.M Ba  	,  || 
B ->  B ||.M Ba  	,  ) 

I102
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
E ->  E +.item  	,  ) 
E ->  E +.item  	,  - 
E ->  E +.item  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .const  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I103
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  - 
item -> .factor  	,  / 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  + 
factor -> .id  	,  - 
factor -> .id  	,  / 
item -> .item / factor  	,  == <= != < > >= 
E ->  E -.item  	,  + 
E ->  E -.item  	,  - 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  - 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  - 
factor -> .( E )  	,  / 
item -> .item / factor  	,  + 
item -> .item / factor  	,  - 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
item -> .item * factor  	,  == <= != < > >= 
item -> .factor  	,  == <= != < > >= 
E ->  E -.item  	,  == <= != < > >= 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  / 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  - 
factor -> .const  	,  / 

I104
factor -> .( E )  	,  * 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  - 
item ->  item *.factor  	,  / 
item ->  item *.factor  	,  + 
item ->  item *.factor  	,  - 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
factor -> .( E )  	,  - 
factor -> .( E )  	,  == <= != < > >= 
item ->  item *.factor  	,  == <= != < > >= 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
item ->  item *.factor  	,  * 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  - 
factor -> .const  	,  / 
factor -> .const  	,  + 
factor -> .const  	,  - 

I105
T ->  String [ const ].  	,  id 

I106
factor -> .( E )  	,  * 
factor ->  (.E )  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor ->  (.E )  	,  ) 
factor ->  (.E )  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  (.E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor ->  (.E )  	,  + 
factor ->  (.E )  	,  / 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I107
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  ; 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
E ->  E + item.  	,  ; 
E ->  E + item.  	,  - 
E ->  E + item.  	,  + 
item ->  item.* factor  	,  ; 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 

I108
factor ->  const.  	,  * 
factor ->  const.  	,  ) 
factor ->  const.  	,  - 
factor ->  const.  	,  + 
factor ->  const.  	,  / 
factor ->  const.  	,  == <= != < > >= 

I109
relop ->  !=.  	,  call const ( id 

I110
factor -> .( E )  	,  * 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .id  	,  ) 
factor -> .id  	,  - 
item ->  item *.factor  	,  + 
item ->  item *.factor  	,  / 
item ->  item *.factor  	,  ) 
item ->  item *.factor  	,  - 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .id  	,  * 
item ->  item *.factor  	,  * 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 

I111
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 
S ->  call id ( Elist.) ;  	,  call void id String while if return int 
S ->  call id ( Elist.) ;  	,  # 

I112
factor -> .( E )  	,  , 
factor -> .( E )  	,  * 
item -> .item / factor  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  , 
factor -> .call id ( Elist )  	,  * 
E ->  E +.item  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  , 
factor -> .const  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
item -> .factor  	,  * 
factor -> .id  	,  , 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
E ->  E +.item  	,  ) 
E ->  E +.item  	,  - 
E ->  E +.item  	,  + 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .const  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I113
factor -> .( E )  	,  * 
item ->  item /.factor  	,  * 
factor -> .call id ( Elist )  	,  == <= != < > >= 
item ->  item /.factor  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor -> .( E )  	,  == <= != < > >= 
item ->  item /.factor  	,  ) 
item ->  item /.factor  	,  - 
item ->  item /.factor  	,  + 
item ->  item /.factor  	,  / 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I114
item ->  item / factor.  	,  * 
item ->  item / factor.  	,  ) 
item ->  item / factor.  	,  - 
item ->  item / factor.  	,  + 
item ->  item / factor.  	,  / 

I115
E ->  item.  	,  + 
E ->  item.  	,  ) 
E ->  item.  	,  - 
E ->  item.  	,  && 
E ->  item.  	,  || 
item ->  item./ factor  	,  && 
item ->  item./ factor  	,  || 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  / 
item ->  item./ factor  	,  + 
item ->  item.* factor  	,  || 
item ->  item.* factor  	,  && 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  * 

I116
factor -> .( E )  	,  * 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .id  	,  ) 
factor -> .id  	,  - 
item ->  item *.factor  	,  + 
item ->  item *.factor  	,  / 
item ->  item *.factor  	,  ) 
item ->  item *.factor  	,  - 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  == <= != < > >= 
item ->  item *.factor  	,  == <= != < > >= 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
item ->  item *.factor  	,  * 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 

I117
factor -> .( E )  	,  , 
factor -> .( E )  	,  * 
item ->  item /.factor  	,  , 
item ->  item /.factor  	,  * 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  , 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  , 
factor -> .const  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item ->  item /.factor  	,  ) 
item ->  item /.factor  	,  - 
item ->  item /.factor  	,  + 
item ->  item /.factor  	,  / 
factor -> .id  	,  , 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I118
factor ->  call id ( Elist.)  	,  ; 
factor ->  call id ( Elist.)  	,  + 
factor ->  call id ( Elist.)  	,  / 
factor ->  call id ( Elist.)  	,  - 
factor ->  call id ( Elist.)  	,  * 
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 

I119
Bc ->  E relop E.  	,  && 
Bc ->  E relop E.  	,  ) 
Bc ->  E relop E.  	,  || 
E ->  E.+ item  	,  || 
E ->  E.- item  	,  + 
E ->  E.- item  	,  && 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.- item  	,  || 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  && 
E ->  E.+ item  	,  + 

I120
factor ->  ( E ).  	,  ) 
factor ->  ( E ).  	,  - 
factor ->  ( E ).  	,  * 
factor ->  ( E ).  	,  + 
factor ->  ( E ).  	,  / 

I121
factor ->  call id (.Elist )  	,  + 
factor ->  call id (.Elist )  	,  / 
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  call id (.Elist )  	,  ) 
factor ->  call id (.Elist )  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor ->  call id (.Elist )  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I122
factor ->  ( E ).  	,  - 
factor ->  ( E ).  	,  * 
factor ->  ( E ).  	,  / 
factor ->  ( E ).  	,  + 
factor ->  ( E ).  	,  == <= != < > >= 

I123
item ->  factor.  	,  / 
item ->  factor.  	,  + 
item ->  factor.  	,  * 
item ->  factor.  	,  ) 
item ->  factor.  	,  - 
item ->  factor.  	,  && 
item ->  factor.  	,  || 

I124
para ->  D.  	,  ) 
para ->  D.  	,  , 

I125
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
item -> .item / factor  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
E ->  E +.item  	,  == <= != < > >= 
item -> .item * factor  	,  == <= != < > >= 
item -> .factor  	,  == <= != < > >= 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
E ->  E +.item  	,  ) 
E ->  E +.item  	,  - 
E ->  E +.item  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .const  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I126
S ->  call id ( Elist ).;  	,  call void id String while if return int 
S ->  call id ( Elist ).;  	,  # 

I127
S ->  T id ( M' para.) { L }  	,  # 
para ->  para., D  	,  ) 
para ->  para., D  	,  , 
S ->  T id ( M' para.) { L }  	,  call void id String while if return int 

I128
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  / 
E ->  E - item.  	,  == <= != < > >= 
item ->  item./ factor  	,  == <= != < > >= 
item ->  item.* factor  	,  == <= != < > >= 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 
E ->  E - item.  	,  + 
E ->  E - item.  	,  - 

I129
factor -> .( E )  	,  * 
Ba -> .Ba && M Bb  	,  && 
Ba -> .Ba && M Bb  	,  || 
B ->  B || M.Ba  	,  ) 
Ba -> .Bb  	,  ) 
item -> .factor  	,  / 
item -> .factor  	,  + 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .id  	,  / 
factor -> .id  	,  + 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
Bc -> .E relop E  	,  || 
Bc -> .E relop E  	,  && 
E -> .item  	,  + 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
B ->  B || M.Ba  	,  || 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
E -> .E - item  	,  == <= != < > >= 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
Bb -> .! Bb  	,  ) 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  && 
Bb -> .Bc  	,  || 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  - 
E -> .item  	,  - 
Ba -> .Bb  	,  && 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
Ba -> .Bb  	,  || 
Ba -> .Ba && M Bb  	,  ) 
E -> .item  	,  == <= != < > >= 
item -> .factor  	,  == <= != < > >= 
Bc -> .( B )  	,  || 
factor -> .id  	,  * 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I130
Bc ->  E.relop E  	,  || 
factor ->  ( E.)  	,  ) 
factor ->  ( E.)  	,  - 
Bc ->  E.relop E  	,  && 
factor ->  ( E.)  	,  * 
Bc ->  E.relop E  	,  ) 
factor ->  ( E.)  	,  + 
factor ->  ( E.)  	,  / 
relop -> .>  	,  call const ( id 
relop -> .==  	,  call const ( id 
factor ->  ( E.)  	,  == <= != < > >= 
relop -> .>=  	,  call const ( id 
E ->  E.+ item  	,  == <= != < > >= 
relop -> .<  	,  call const ( id 
E ->  E.- item  	,  == <= != < > >= 
relop -> .<=  	,  call const ( id 
E ->  E.- item  	,  + 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 
relop -> .!=  	,  call const ( id 

I131
factor ->  call id.( Elist )  	,  * 
factor ->  call id.( Elist )  	,  + 
factor ->  call id.( Elist )  	,  / 
factor ->  call id.( Elist )  	,  , 
factor ->  call id.( Elist )  	,  ) 
factor ->  call id.( Elist )  	,  - 

I132
S ->  while ( M B ).{ M L }  	,  call void id String while if return int 
S ->  while ( M B ).{ M L }  	,  # 

I133
item ->  item / factor.  	,  == <= != < > >= 
item ->  item / factor.  	,  * 
item ->  item / factor.  	,  - 
item ->  item / factor.  	,  / 
item ->  item / factor.  	,  + 

I134
D ->  T.id  	,  ) 
D ->  T.id  	,  , 

I135
factor -> .( E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  ) 
item -> .factor  	,  - 
item -> .factor  	,  / 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  + 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  / 
item -> .item / factor  	,  == <= != < > >= 
E ->  E -.item  	,  + 
E ->  E -.item  	,  ) 
E ->  E -.item  	,  - 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  / 
item -> .item / factor  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
item -> .item * factor  	,  == <= != < > >= 
item -> .factor  	,  == <= != < > >= 
E ->  E -.item  	,  == <= != < > >= 
factor -> .id  	,  * 
factor -> .id  	,  == <= != < > >= 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I136
factor -> .( E )  	,  , 
factor -> .( E )  	,  * 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .id  	,  ) 
factor -> .id  	,  - 
item ->  item *.factor  	,  + 
item ->  item *.factor  	,  / 
item ->  item *.factor  	,  ) 
item ->  item *.factor  	,  - 
factor -> .call id ( Elist )  	,  , 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  , 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .id  	,  , 
factor -> .id  	,  * 
item ->  item *.factor  	,  , 
item ->  item *.factor  	,  * 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 

I137
factor ->  (.E )  	,  && 
factor -> .( E )  	,  * 
factor ->  (.E )  	,  || 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor ->  (.E )  	,  ) 
factor ->  (.E )  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  (.E )  	,  * 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor ->  (.E )  	,  / 
factor ->  (.E )  	,  + 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I138
item ->  item * factor.  	,  / 
item ->  item * factor.  	,  + 
item ->  item * factor.  	,  - 
item ->  item * factor.  	,  * 
item ->  item * factor.  	,  == <= != < > >= 

I139
S ->  if ( B ) {.M L } N else { M L }  	,  call void id String while if return int 
S ->  if ( B ) {.M L } N else { M L }  	,  # 
S ->  if ( B ) {.M L }  	,  call void id String while if return int 
S ->  if ( B ) {.M L }  	,  # 
M -> .  	,  call void id String while if return int 

I140
factor ->  call id (.Elist )  	,  / 
factor ->  call id (.Elist )  	,  + 
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  call id (.Elist )  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor ->  call id (.Elist )  	,  == <= != < > >= 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor ->  call id (.Elist )  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I141
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
E ->  E + item.  	,  ) 
E ->  E + item.  	,  - 
E ->  E + item.  	,  + 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 

I142
factor ->  const.  	,  || 
factor ->  const.  	,  * 
factor ->  const.  	,  ) 
factor ->  const.  	,  - 
factor ->  const.  	,  && 
factor ->  const.  	,  / 
factor ->  const.  	,  + 

I143
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
Elist ->  Elist ,.E  	,  , 
factor -> .( E )  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
Elist ->  Elist ,.E  	,  ) 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I144
factor ->  call id.( Elist )  	,  * 
factor ->  call id.( Elist )  	,  + 
factor ->  call id.( Elist )  	,  / 
factor ->  call id.( Elist )  	,  ) 
factor ->  call id.( Elist )  	,  - 
factor ->  call id.( Elist )  	,  == <= != < > >= 

I145
item ->  item * factor.  	,  + 
item ->  item * factor.  	,  / 
item ->  item * factor.  	,  ) 
item ->  item * factor.  	,  - 
item ->  item * factor.  	,  * 

I146
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
E ->  E + item.  	,  == <= != < > >= 
item ->  item./ factor  	,  == <= != < > >= 
item ->  item.* factor  	,  == <= != < > >= 
E ->  E + item.  	,  - 
E ->  E + item.  	,  + 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 

I147
factor ->  call.id ( Elist )  	,  * 
factor ->  call.id ( Elist )  	,  / 
factor ->  call.id ( Elist )  	,  + 
factor ->  call.id ( Elist )  	,  ) 
factor ->  call.id ( Elist )  	,  - 
factor ->  call.id ( Elist )  	,  && 
factor ->  call.id ( Elist )  	,  || 

I148
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 
E ->  E - item.  	,  + 
E ->  E - item.  	,  ) 
E ->  E - item.  	,  - 

I149
factor ->  id.  	,  || 
factor ->  id.  	,  / 
factor ->  id.  	,  + 
factor ->  id.  	,  ) 
factor ->  id.  	,  - 
factor ->  id.  	,  * 
factor ->  id.  	,  && 

I150
factor -> .( E )  	,  , 
factor -> .( E )  	,  * 
item -> .item / factor  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  ) 
item -> .factor  	,  - 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  / 
E ->  E -.item  	,  + 
E ->  E -.item  	,  ) 
E ->  E -.item  	,  - 
factor -> .call id ( Elist )  	,  , 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
item -> .item * factor  	,  / 
factor -> .const  	,  , 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  / 
item -> .item / factor  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
item -> .factor  	,  * 
factor -> .id  	,  , 
factor -> .id  	,  * 
E ->  E -.item  	,  , 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  / 
item -> .item * factor  	,  , 
factor -> .const  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I151
factor ->  ( E.)  	,  , 
factor ->  ( E.)  	,  ) 
factor ->  ( E.)  	,  - 
factor ->  ( E.)  	,  * 
factor ->  ( E.)  	,  + 
factor ->  ( E.)  	,  / 
E ->  E.- item  	,  + 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I152
factor -> .( E )  	,  * 
item -> .factor  	,  / 
item -> .factor  	,  + 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .id  	,  / 
factor -> .id  	,  + 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
Bc -> .E relop E  	,  || 
Bc -> .E relop E  	,  && 
E -> .item  	,  + 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
Ba ->  Ba && M.Bb  	,  ) 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
E -> .E - item  	,  == <= != < > >= 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
Bc -> .E relop E  	,  ) 
Ba ->  Ba && M.Bb  	,  || 
Ba ->  Ba && M.Bb  	,  && 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
Bb -> .! Bb  	,  ) 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  - 
E -> .item  	,  - 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
E -> .item  	,  == <= != < > >= 
item -> .factor  	,  == <= != < > >= 
Bc -> .( B )  	,  || 
factor -> .id  	,  * 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I153
Bc ->  ( B ).  	,  || 
Bc ->  ( B ).  	,  ) 
Bc ->  ( B ).  	,  && 

I154
item ->  item / factor.  	,  == <= != < > >= 
item ->  item / factor.  	,  * 
item ->  item / factor.  	,  ) 
item ->  item / factor.  	,  - 
item ->  item / factor.  	,  + 
item ->  item / factor.  	,  / 

I155
factor -> .( E )  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  / 
item -> .item / factor  	,  || 
item -> .item / factor  	,  && 
factor -> .id  	,  + 
factor -> .id  	,  / 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  && 
factor -> .id  	,  || 
item -> .item * factor  	,  && 
item -> .item * factor  	,  || 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
E ->  E +.item  	,  ) 
E ->  E +.item  	,  - 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .( E )  	,  && 
factor -> .( E )  	,  || 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .const  	,  || 
factor -> .call id ( Elist )  	,  || 
E ->  E +.item  	,  || 
factor -> .call id ( Elist )  	,  && 
E ->  E +.item  	,  && 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  && 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
item -> .factor  	,  || 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  && 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
E ->  E +.item  	,  + 
factor -> .const  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I156
factor ->  call id ( Elist.)  	,  / 
factor ->  call id ( Elist.)  	,  + 
factor ->  call id ( Elist.)  	,  - 
factor ->  call id ( Elist.)  	,  * 
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 
factor ->  call id ( Elist.)  	,  == <= != < > >= 

I157
item ->  item / factor.  	,  , 
item ->  item / factor.  	,  * 
item ->  item / factor.  	,  ) 
item ->  item / factor.  	,  - 
item ->  item / factor.  	,  + 
item ->  item / factor.  	,  / 

I158
factor -> .( E )  	,  * 
factor -> .( E )  	,  && 
factor -> .( E )  	,  || 
factor -> .id  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .const  	,  || 
factor -> .call id ( Elist )  	,  || 
factor -> .call id ( Elist )  	,  && 
item ->  item *.factor  	,  / 
item ->  item *.factor  	,  + 
item ->  item *.factor  	,  ) 
item ->  item *.factor  	,  - 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  && 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .id  	,  && 
factor -> .id  	,  * 
factor -> .id  	,  || 
item ->  item *.factor  	,  && 
item ->  item *.factor  	,  || 
item ->  item *.factor  	,  * 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .const  	,  / 
factor -> .const  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 

I159
Elist ->  Elist , E.  	,  , 
Elist ->  Elist , E.  	,  ) 
E ->  E.- item  	,  + 
E ->  E.- item  	,  , 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  , 
E ->  E.+ item  	,  + 

I160
factor ->  ( E ).  	,  ) 
factor ->  ( E ).  	,  - 
factor ->  ( E ).  	,  * 
factor ->  ( E ).  	,  + 
factor ->  ( E ).  	,  / 
factor ->  ( E ).  	,  == <= != < > >= 

I161
item ->  item./ factor  	,  , 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
E ->  E + item.  	,  , 
E ->  E + item.  	,  ) 
E ->  E + item.  	,  - 
E ->  E + item.  	,  + 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  , 
item ->  item.* factor  	,  * 

I162
item ->  item * factor.  	,  + 
item ->  item * factor.  	,  / 
item ->  item * factor.  	,  ) 
item ->  item * factor.  	,  - 
item ->  item * factor.  	,  * 
item ->  item * factor.  	,  == <= != < > >= 

I163
D ->  T id.  	,  ) 
D ->  T id.  	,  , 

I164
factor ->  call id.( Elist )  	,  && 
factor ->  call id.( Elist )  	,  * 
factor ->  call id.( Elist )  	,  / 
factor ->  call id.( Elist )  	,  + 
factor ->  call id.( Elist )  	,  ) 
factor ->  call id.( Elist )  	,  - 
factor ->  call id.( Elist )  	,  || 

I165
factor ->  call id ( Elist ).  	,  ; 
factor ->  call id ( Elist ).  	,  + 
factor ->  call id ( Elist ).  	,  / 
factor ->  call id ( Elist ).  	,  - 
factor ->  call id ( Elist ).  	,  * 

I166
S ->  call id ( Elist ) ;.  	,  call void id String while if return int 
S ->  call id ( Elist ) ;.  	,  # 

I167
factor ->  call id ( Elist.)  	,  + 
factor ->  call id ( Elist.)  	,  / 
factor ->  call id ( Elist.)  	,  ) 
factor ->  call id ( Elist.)  	,  - 
factor ->  call id ( Elist.)  	,  * 
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 

I168
factor ->  call id (.Elist )  	,  + 
factor ->  call id (.Elist )  	,  / 
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor ->  call id (.Elist )  	,  , 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  call id (.Elist )  	,  ) 
factor ->  call id (.Elist )  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor ->  call id (.Elist )  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I169
item ->  item * factor.  	,  + 
item ->  item * factor.  	,  / 
item ->  item * factor.  	,  ) 
item ->  item * factor.  	,  - 
item ->  item * factor.  	,  , 
item ->  item * factor.  	,  * 

I170
Ba ->  Ba && M Bb.  	,  && 
Ba ->  Ba && M Bb.  	,  || 
Ba ->  Ba && M Bb.  	,  ) 

I171
S ->  T id ( M' para ).{ L }  	,  call void id String while if return int 
S ->  T id ( M' para ).{ L }  	,  # 

I172
Ba ->  Ba.&& M Bb  	,  || 
Ba ->  Ba.&& M Bb  	,  && 
B ->  B || M Ba.  	,  ) 
B ->  B || M Ba.  	,  || 
Ba ->  Ba.&& M Bb  	,  ) 

I173
factor ->  call id (.Elist )  	,  + 
factor ->  call id (.Elist )  	,  / 
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  call id (.Elist )  	,  ) 
factor ->  call id (.Elist )  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor ->  call id (.Elist )  	,  == <= != < > >= 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor ->  call id (.Elist )  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I174
S ->  while ( M B ) {.M L }  	,  # 
M -> .  	,  call void id String while if return int 
S ->  while ( M B ) {.M L }  	,  call void id String while if return int 

I175
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
E ->  E + item.  	,  == <= != < > >= 
item ->  item./ factor  	,  == <= != < > >= 
item ->  item.* factor  	,  == <= != < > >= 
E ->  E + item.  	,  ) 
E ->  E + item.  	,  - 
E ->  E + item.  	,  + 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 

I176
factor ->  ( E ).  	,  , 
factor ->  ( E ).  	,  ) 
factor ->  ( E ).  	,  - 
factor ->  ( E ).  	,  * 
factor ->  ( E ).  	,  + 
factor ->  ( E ).  	,  / 

I177
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  / 
E ->  E - item.  	,  == <= != < > >= 
item ->  item./ factor  	,  == <= != < > >= 
item ->  item.* factor  	,  == <= != < > >= 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  * 
E ->  E - item.  	,  + 
E ->  E - item.  	,  ) 
E ->  E - item.  	,  - 

I178
D -> .T id  	,  ) 
D -> .T id  	,  , 
T -> .void  	,  id 
T -> .int  	,  id 
T -> .String [ const ]  	,  id 
para ->  para ,.D  	,  ) 
para ->  para ,.D  	,  , 

I179
factor ->  ( E.)  	,  || 
factor ->  ( E.)  	,  ) 
factor ->  ( E.)  	,  - 
factor ->  ( E.)  	,  * 
factor ->  ( E.)  	,  / 
factor ->  ( E.)  	,  + 
factor ->  ( E.)  	,  && 
E ->  E.- item  	,  + 
E ->  E.- item  	,  ) 
E ->  E.- item  	,  - 
E ->  E.+ item  	,  ) 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I180
factor -> .( E )  	,  * 
item -> .factor  	,  + 
item -> .factor  	,  / 
item -> .item / factor  	,  || 
item -> .item / factor  	,  && 
factor -> .id  	,  + 
factor -> .id  	,  / 
E ->  E -.item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  && 
factor -> .id  	,  || 
item -> .item * factor  	,  && 
item -> .item * factor  	,  || 
E ->  E -.item  	,  && 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
E ->  E -.item  	,  || 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .( E )  	,  && 
factor -> .( E )  	,  || 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .const  	,  || 
factor -> .call id ( Elist )  	,  || 
E ->  E -.item  	,  ) 
E ->  E -.item  	,  - 
factor -> .call id ( Elist )  	,  && 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  && 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
item -> .item / factor  	,  + 
item -> .factor  	,  || 
item -> .item / factor  	,  / 
item -> .factor  	,  && 
factor -> .id  	,  * 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .const  	,  + 
item -> .item * factor  	,  * 
factor -> .const  	,  / 

I181
factor -> .( E )  	,  * 
factor -> .( E )  	,  && 
factor -> .( E )  	,  || 
item ->  item /.factor  	,  || 
item ->  item /.factor  	,  && 
item ->  item /.factor  	,  * 
factor -> .id  	,  ) 
factor -> .id  	,  - 
factor -> .id  	,  / 
factor -> .id  	,  + 
factor -> .const  	,  || 
factor -> .call id ( Elist )  	,  || 
factor -> .call id ( Elist )  	,  && 
factor -> .call id ( Elist )  	,  * 
factor -> .const  	,  && 
factor -> .const  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
item ->  item /.factor  	,  ) 
item ->  item /.factor  	,  - 
item ->  item /.factor  	,  / 
item ->  item /.factor  	,  + 
factor -> .id  	,  && 
factor -> .id  	,  * 
factor -> .id  	,  || 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .const  	,  / 
factor -> .const  	,  + 

I182
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S ->  if ( B ) { M.L }  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M.L } N else { M L }  	,  # 
S -> .id = E ;  	,  } 
S ->  if ( B ) { M.L }  	,  # 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M.L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I183
item ->  item./ factor  	,  , 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  , 
item ->  item.* factor  	,  * 
E ->  E - item.  	,  + 
E ->  E - item.  	,  ) 
E ->  E - item.  	,  - 
E ->  E - item.  	,  , 

I184
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S -> .id = E ;  	,  } 
S ->  while ( M B ) { M.L }  	,  call void id String while if return int 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
S ->  while ( M B ) { M.L }  	,  # 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I185
S ->  id.= str ;  	,  call void id String while if return int 
S ->  id.= E ;  	,  } 
S ->  id.= str ;  	,  } 
S ->  id.= E ;  	,  call void id String while if return int 

I186
factor ->  call id ( Elist ).  	,  / 
factor ->  call id ( Elist ).  	,  + 
factor ->  call id ( Elist ).  	,  - 
factor ->  call id ( Elist ).  	,  * 
factor ->  call id ( Elist ).  	,  == <= != < > >= 

I187
factor ->  call id ( Elist.)  	,  + 
factor ->  call id ( Elist.)  	,  / 
factor ->  call id ( Elist.)  	,  , 
factor ->  call id ( Elist.)  	,  ) 
factor ->  call id ( Elist.)  	,  - 
factor ->  call id ( Elist.)  	,  * 
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 

I188
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
S ->  T id ( M' para ) {.L }  	,  # 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S ->  T id ( M' para ) {.L }  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S -> .id = E ;  	,  } 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I189
para ->  para , D.  	,  ) 
para ->  para , D.  	,  , 

I190
factor ->  call id ( Elist ).  	,  + 
factor ->  call id ( Elist ).  	,  / 
factor ->  call id ( Elist ).  	,  ) 
factor ->  call id ( Elist ).  	,  - 
factor ->  call id ( Elist ).  	,  * 

I191
factor ->  call id (.Elist )  	,  / 
factor ->  call id (.Elist )  	,  + 
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
factor ->  call id (.Elist )  	,  && 
E -> .item  	,  + 
factor ->  call id (.Elist )  	,  || 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor ->  call id (.Elist )  	,  ) 
factor ->  call id (.Elist )  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor ->  call id (.Elist )  	,  * 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I192
item ->  item./ factor  	,  && 
item ->  item./ factor  	,  || 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  || 
item ->  item.* factor  	,  && 
E ->  E - item.  	,  || 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  * 
E ->  E - item.  	,  + 
E ->  E - item.  	,  && 
E ->  E - item.  	,  ) 
E ->  E - item.  	,  - 

I193
D ->  T.id  	,  ; 
S ->  T.id ( M' para ) { L }  	,  call void id String while if return int 
S ->  T.id ( M' para ) { L }  	,  } 

I194
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  if ( B ) { M L.} N else { M L }  	,  # 
S ->  if ( B ) { M L.}  	,  call void id String while if return int 
S ->  if ( B ) { M L.}  	,  # 
S ->  if ( B ) { M L.} N else { M L }  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 

I195
factor -> .( E )  	,  * 
S ->  return.E ;  	,  } 
item -> .item / factor  	,  * 
item -> .factor  	,  ; 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
S ->  return.E ;  	,  call void id String while if return int 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  ; 
E -> .E - item  	,  - 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ; 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  ; 
E -> .item  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ; 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
factor -> .id  	,  * 
E -> .E + item  	,  ; 
E -> .E + item  	,  - 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ; 
item -> .item * factor  	,  * 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I196
item ->  item * factor.  	,  || 
item ->  item * factor.  	,  && 
item ->  item * factor.  	,  / 
item ->  item * factor.  	,  + 
item ->  item * factor.  	,  ) 
item ->  item * factor.  	,  - 
item ->  item * factor.  	,  * 

I197
S ->  D.;  	,  } 
S ->  D.;  	,  call void id String while if return int 

I198
item ->  item./ factor  	,  && 
item ->  item./ factor  	,  || 
item ->  item./ factor  	,  ) 
item ->  item./ factor  	,  - 
item ->  item./ factor  	,  * 
item ->  item./ factor  	,  + 
item ->  item./ factor  	,  / 
item ->  item.* factor  	,  || 
item ->  item.* factor  	,  && 
E ->  E + item.  	,  ) 
E ->  E + item.  	,  - 
E ->  E + item.  	,  && 
E ->  E + item.  	,  + 
E ->  E + item.  	,  || 
item ->  item.* factor  	,  + 
item ->  item.* factor  	,  / 
item ->  item.* factor  	,  ) 
item ->  item.* factor  	,  - 
item ->  item.* factor  	,  * 

I199
item ->  item / factor.  	,  * 
item ->  item / factor.  	,  ) 
item ->  item / factor.  	,  - 
item ->  item / factor.  	,  / 
item ->  item / factor.  	,  + 
item ->  item / factor.  	,  && 
item ->  item / factor.  	,  || 

I200
S ->  if.( B ) { M L }  	,  } 
S ->  if.( B ) { M L } N else { M L }  	,  call void id String while if return int 
S ->  if.( B ) { M L } N else { M L }  	,  } 
S ->  if.( B ) { M L }  	,  call void id String while if return int 

I201
S ->  call.id ( Elist ) ;  	,  call void id String while if return int 
S ->  call.id ( Elist ) ;  	,  } 

I202
factor ->  ( E ).  	,  || 
factor ->  ( E ).  	,  && 
factor ->  ( E ).  	,  ) 
factor ->  ( E ).  	,  - 
factor ->  ( E ).  	,  * 
factor ->  ( E ).  	,  / 
factor ->  ( E ).  	,  + 

I203
L ->  S.  	,  call void id String while if return int 
L ->  S.  	,  } 

I204
factor ->  call id ( Elist.)  	,  + 
factor ->  call id ( Elist.)  	,  / 
factor ->  call id ( Elist.)  	,  ) 
factor ->  call id ( Elist.)  	,  - 
factor ->  call id ( Elist.)  	,  * 
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 
factor ->  call id ( Elist.)  	,  == <= != < > >= 

I205
S ->  while.( M B ) { M L }  	,  call void id String while if return int 
S ->  while.( M B ) { M L }  	,  } 

I206
S ->  call id.( Elist ) ;  	,  call void id String while if return int 
S ->  call id.( Elist ) ;  	,  } 

I207
factor ->  call id ( Elist ).  	,  + 
factor ->  call id ( Elist ).  	,  / 
factor ->  call id ( Elist ).  	,  ) 
factor ->  call id ( Elist ).  	,  - 
factor ->  call id ( Elist ).  	,  * 
factor ->  call id ( Elist ).  	,  == <= != < > >= 

I208
S ->  D ;.  	,  } 
S ->  D ;.  	,  call void id String while if return int 

I209
S ->  T id.( M' para ) { L }  	,  call void id String while if return int 
S ->  T id.( M' para ) { L }  	,  } 
D ->  T id.  	,  ; 

I210
S ->  if ( B ) { M L }.N else { M L }  	,  # 
S ->  if ( B ) { M L }.  	,  call void id String while if return int 
S ->  if ( B ) { M L }.N else { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L }.  	,  # 
N -> .  	,  else 

I211
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  while ( M B ) { M L.}  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 
S ->  while ( M B ) { M L.}  	,  # 

I212
L ->  L M.S  	,  } 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
D -> .T id  	,  ; 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S -> .id = E ;  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L ->  L M.S  	,  call void id String while if return int 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
T -> .int  	,  id 
S -> .while ( M B ) { M L }  	,  } 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I213
factor ->  call id ( Elist ).  	,  + 
factor ->  call id ( Elist ).  	,  / 
factor ->  call id ( Elist ).  	,  , 
factor ->  call id ( Elist ).  	,  ) 
factor ->  call id ( Elist ).  	,  - 
factor ->  call id ( Elist ).  	,  * 

I214
M -> .  	,  call ! const true ( false id 
S ->  while (.M B ) { M L }  	,  } 
S ->  while (.M B ) { M L }  	,  call void id String while if return int 

I215
factor -> .( E )  	,  * 
Ba -> .Ba && M Bb  	,  && 
Ba -> .Ba && M Bb  	,  || 
Ba -> .Bb  	,  ) 
item -> .factor  	,  / 
item -> .factor  	,  + 
factor -> .call id ( Elist )  	,  == <= != < > >= 
S ->  if (.B ) { M L }  	,  } 
factor -> .id  	,  / 
factor -> .id  	,  + 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
S ->  if (.B ) { M L }  	,  call void id String while if return int 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
Bc -> .E relop E  	,  || 
S ->  if (.B ) { M L } N else { M L }  	,  } 
Bc -> .E relop E  	,  && 
E -> .item  	,  + 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
E -> .E - item  	,  == <= != < > >= 
B -> .Ba  	,  ) 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
B -> .B || M Ba  	,  ) 
Bb -> .! Bb  	,  ) 
B -> .Ba  	,  || 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  - 
E -> .item  	,  - 
Ba -> .Bb  	,  && 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
Ba -> .Bb  	,  || 
Ba -> .Ba && M Bb  	,  ) 
E -> .item  	,  == <= != < > >= 
B -> .B || M Ba  	,  || 
S ->  if (.B ) { M L } N else { M L }  	,  call void id String while if return int 
item -> .factor  	,  == <= != < > >= 
Bc -> .( B )  	,  || 
factor -> .id  	,  * 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I216
factor -> .( E )  	,  * 
S ->  id =.str ;  	,  } 
item -> .item / factor  	,  * 
item -> .factor  	,  ; 
item -> .factor  	,  - 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  ; 
factor -> .id  	,  - 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  ; 
E -> .E - item  	,  - 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  ; 
item -> .item * factor  	,  - 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  ; 
factor -> .( E )  	,  - 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  ; 
E -> .item  	,  - 
E -> .item  	,  + 
item -> .item / factor  	,  ; 
item -> .item / factor  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  * 
S ->  id =.E ;  	,  } 
S ->  id =.str ;  	,  call void id String while if return int 
factor -> .id  	,  * 
S ->  id =.E ;  	,  call void id String while if return int 
E -> .E + item  	,  ; 
E -> .E + item  	,  - 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ; 
factor -> .call id ( Elist )  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
factor -> .const  	,  ; 
item -> .item * factor  	,  * 
factor -> .const  	,  - 
factor -> .const  	,  + 
factor -> .const  	,  / 

I217
factor ->  call id ( Elist.)  	,  && 
factor ->  call id ( Elist.)  	,  / 
factor ->  call id ( Elist.)  	,  + 
factor ->  call id ( Elist.)  	,  ) 
factor ->  call id ( Elist.)  	,  - 
factor ->  call id ( Elist.)  	,  * 
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 
factor ->  call id ( Elist.)  	,  || 

I218
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  T id ( M' para ) { L.}  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 
S ->  T id ( M' para ) { L.}  	,  # 

I219
S ->  return E.;  	,  } 
E ->  E.- item  	,  ; 
E ->  E.- item  	,  - 
E ->  E.- item  	,  + 
S ->  return E.;  	,  call void id String while if return int 
E ->  E.+ item  	,  ; 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I220
S ->  while ( M B ) { M L }.  	,  call void id String while if return int 
S ->  while ( M B ) { M L }.  	,  # 

I221
factor -> .( E )  	,  * 
Ba -> .Ba && M Bb  	,  && 
Ba -> .Ba && M Bb  	,  || 
Ba -> .Bb  	,  ) 
item -> .factor  	,  / 
item -> .factor  	,  + 
factor -> .call id ( Elist )  	,  == <= != < > >= 
factor -> .id  	,  / 
factor -> .id  	,  + 
item -> .item / factor  	,  == <= != < > >= 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
item -> .item * factor  	,  / 
item -> .item * factor  	,  + 
factor -> .const  	,  * 
factor -> .( E )  	,  / 
factor -> .( E )  	,  + 
Bc -> .E relop E  	,  || 
Bc -> .E relop E  	,  && 
E -> .item  	,  + 
Bc -> .true  	,  && 
Bc -> .true  	,  || 
Bc -> .false  	,  || 
Bc -> .false  	,  && 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .( E )  	,  == <= != < > >= 
S ->  while ( M.B ) { M L }  	,  call void id String while if return int 
E -> .E + item  	,  == <= != < > >= 
Bb -> .! Bb  	,  && 
Bb -> .! Bb  	,  || 
item -> .item * factor  	,  == <= != < > >= 
E -> .E - item  	,  == <= != < > >= 
B -> .Ba  	,  ) 
factor -> .id  	,  == <= != < > >= 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  / 
factor -> .call id ( Elist )  	,  + 
factor -> .const  	,  - 
Bc -> .E relop E  	,  ) 
Bc -> .false  	,  ) 
item -> .item / factor  	,  * 
item -> .factor  	,  - 
B -> .B || M Ba  	,  ) 
Bb -> .! Bb  	,  ) 
B -> .Ba  	,  || 
factor -> .const  	,  == <= != < > >= 
factor -> .id  	,  - 
Bb -> .Bc  	,  && 
Bc -> .( B )  	,  ) 
Bb -> .Bc  	,  || 
E -> .E - item  	,  - 
Bc -> .true  	,  ) 
item -> .item * factor  	,  - 
factor -> .( E )  	,  - 
E -> .item  	,  - 
Ba -> .Bb  	,  && 
item -> .item / factor  	,  / 
item -> .item / factor  	,  + 
Ba -> .Bb  	,  || 
Ba -> .Ba && M Bb  	,  ) 
E -> .item  	,  == <= != < > >= 
B -> .B || M Ba  	,  || 
item -> .factor  	,  == <= != < > >= 
S ->  while ( M.B ) { M L }  	,  } 
Bc -> .( B )  	,  || 
factor -> .id  	,  * 
Bb -> .Bc  	,  ) 
Bc -> .( B )  	,  && 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  / 
factor -> .const  	,  + 

I222
S ->  return E ;.  	,  } 
S ->  return E ;.  	,  call void id String while if return int 

I223
S ->  if ( B.) { M L } N else { M L }  	,  } 
S ->  if ( B.) { M L } N else { M L }  	,  call void id String while if return int 
B ->  B.|| M Ba  	,  || 
S ->  if ( B.) { M L }  	,  call void id String while if return int 
S ->  if ( B.) { M L }  	,  } 
B ->  B.|| M Ba  	,  ) 

I224
S ->  id = E.;  	,  } 
E ->  E.- item  	,  ; 
E ->  E.- item  	,  - 
E ->  E.- item  	,  + 
S ->  id = E.;  	,  call void id String while if return int 
E ->  E.+ item  	,  ; 
E ->  E.+ item  	,  - 
E ->  E.+ item  	,  + 

I225
S ->  if ( B ) { M L } N.else { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L } N.else { M L }  	,  # 

I226
S ->  id = str.;  	,  } 
S ->  id = str.;  	,  call void id String while if return int 

I227
factor -> .( E )  	,  * 
E -> .item  	,  , 
item -> .item / factor  	,  , 
item -> .factor  	,  + 
item -> .factor  	,  / 
factor -> .id  	,  + 
factor -> .id  	,  / 
E -> .E - item  	,  + 
factor -> .call id ( Elist )  	,  * 
Elist -> .E  	,  ) 
item -> .item * factor  	,  + 
item -> .item * factor  	,  / 
factor -> .const  	,  * 
factor -> .( E )  	,  + 
factor -> .( E )  	,  / 
E -> .item  	,  + 
item -> .item / factor  	,  ) 
item -> .item / factor  	,  - 
item -> .factor  	,  * 
factor -> .id  	,  , 
E -> .E - item  	,  , 
E -> .E + item  	,  ) 
E -> .E + item  	,  - 
factor -> .call id ( Elist )  	,  + 
factor -> .call id ( Elist )  	,  / 
Elist -> .E  	,  , 
item -> .item * factor  	,  , 
factor -> .const  	,  ) 
factor -> .const  	,  - 
factor -> .( E )  	,  , 
Elist -> .Elist , E  	,  , 
item -> .item / factor  	,  * 
item -> .factor  	,  ) 
item -> .factor  	,  - 
S ->  call id (.Elist ) ;  	,  } 
factor -> .id  	,  ) 
factor -> .id  	,  - 
E -> .E - item  	,  ) 
E -> .E - item  	,  - 
E -> .E + item  	,  , 
factor -> .call id ( Elist )  	,  , 
item -> .item * factor  	,  ) 
item -> .item * factor  	,  - 
factor -> .const  	,  , 
factor -> .( E )  	,  ) 
factor -> .( E )  	,  - 
Elist -> .Elist , E  	,  ) 
E -> .item  	,  ) 
E -> .item  	,  - 
item -> .item / factor  	,  + 
item -> .item / factor  	,  / 
item -> .factor  	,  , 
factor -> .id  	,  * 
S ->  call id (.Elist ) ;  	,  call void id String while if return int 
E -> .E + item  	,  + 
factor -> .call id ( Elist )  	,  ) 
factor -> .call id ( Elist )  	,  - 
item -> .item * factor  	,  * 
factor -> .const  	,  + 
factor -> .const  	,  / 

I228
S ->  T id (.M' para ) { L }  	,  } 
S ->  T id (.M' para ) { L }  	,  call void id String while if return int 
M' -> .  	,  void String int 

I229
S ->  T id ( M' para ) { L }.  	,  call void id String while if return int 
S ->  T id ( M' para ) { L }.  	,  # 

I230
factor ->  call id ( Elist ).  	,  || 
factor ->  call id ( Elist ).  	,  && 
factor ->  call id ( Elist ).  	,  / 
factor ->  call id ( Elist ).  	,  + 
factor ->  call id ( Elist ).  	,  ) 
factor ->  call id ( Elist ).  	,  - 
factor ->  call id ( Elist ).  	,  * 

I231
L ->  L M S.  	,  } 
L ->  L M S.  	,  call void id String while if return int 

I232
S ->  if ( B ) { M L } N else.{ M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else.{ M L }  	,  # 

I233
D -> .T id  	,  ) 
D -> .T id  	,  , 
S ->  T id ( M'.para ) { L }  	,  } 
T -> .void  	,  id 
T -> .int  	,  id 
T -> .String [ const ]  	,  id 
para -> .D  	,  ) 
para -> .D  	,  , 
para -> .para , D  	,  ) 
para -> .para , D  	,  , 
S ->  T id ( M'.para ) { L }  	,  call void id String while if return int 

I234
S ->  if ( B ).{ M L } N else { M L }  	,  } 
S ->  if ( B ).{ M L } N else { M L }  	,  call void id String while if return int 
S ->  if ( B ).{ M L }  	,  call void id String while if return int 
S ->  if ( B ).{ M L }  	,  } 

I235
S ->  id = str ;.  	,  } 
S ->  id = str ;.  	,  call void id String while if return int 

I236
S ->  id = E ;.  	,  call void id String while if return int 
S ->  id = E ;.  	,  } 

I237
Elist ->  Elist., E  	,  , 
Elist ->  Elist., E  	,  ) 
S ->  call id ( Elist.) ;  	,  call void id String while if return int 
S ->  call id ( Elist.) ;  	,  } 

I238
S ->  while ( M B.) { M L }  	,  call void id String while if return int 
S ->  while ( M B.) { M L }  	,  } 
B ->  B.|| M Ba  	,  || 
B ->  B.|| M Ba  	,  ) 

I239
S ->  T id ( M' para.) { L }  	,  } 
para ->  para., D  	,  ) 
para ->  para., D  	,  , 
S ->  T id ( M' para.) { L }  	,  call void id String while if return int 

I240
S ->  if ( B ) {.M L } N else { M L }  	,  call void id String while if return int 
S ->  if ( B ) {.M L } N else { M L }  	,  } 
S ->  if ( B ) {.M L }  	,  call void id String while if return int 
S ->  if ( B ) {.M L }  	,  } 
M -> .  	,  call void id String while if return int 

I241
S ->  call id ( Elist ).;  	,  call void id String while if return int 
S ->  call id ( Elist ).;  	,  } 

I242
S ->  if ( B ) { M L } N else {.M L }  	,  # 
M -> .  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else {.M L }  	,  call void id String while if return int 

I243
S ->  while ( M B ).{ M L }  	,  call void id String while if return int 
S ->  while ( M B ).{ M L }  	,  } 

I244
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M.L }  	,  # 
S -> .id = E ;  	,  } 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M.L }  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I245
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S ->  if ( B ) { M.L }  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M.L } N else { M L }  	,  } 
S -> .id = E ;  	,  } 
S ->  if ( B ) { M.L }  	,  } 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M.L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I246
S ->  T id ( M' para ).{ L }  	,  call void id String while if return int 
S ->  T id ( M' para ).{ L }  	,  } 

I247
S ->  call id ( Elist ) ;.  	,  call void id String while if return int 
S ->  call id ( Elist ) ;.  	,  } 

I248
S ->  while ( M B ) {.M L }  	,  } 
M -> .  	,  call void id String while if return int 
S ->  while ( M B ) {.M L }  	,  call void id String while if return int 

I249
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S -> .id = E ;  	,  } 
S ->  while ( M B ) { M.L }  	,  call void id String while if return int 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
S ->  while ( M B ) { M.L }  	,  } 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I250
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  if ( B ) { M L.} N else { M L }  	,  } 
S ->  if ( B ) { M L.}  	,  call void id String while if return int 
S ->  if ( B ) { M L.}  	,  } 
S ->  if ( B ) { M L.} N else { M L }  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 

I251
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  if ( B ) { M L } N else { M L.}  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M L.}  	,  # 

I252
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
S ->  T id ( M' para ) {.L }  	,  } 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S ->  T id ( M' para ) {.L }  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S -> .id = E ;  	,  } 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I253
S ->  if ( B ) { M L } N else { M L }.  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M L }.  	,  # 

I254
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  while ( M B ) { M L.}  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 
S ->  while ( M B ) { M L.}  	,  } 

I255
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  T id ( M' para ) { L.}  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 
S ->  T id ( M' para ) { L.}  	,  } 

I256
S ->  if ( B ) { M L }.N else { M L }  	,  } 
S ->  if ( B ) { M L }.  	,  call void id String while if return int 
S ->  if ( B ) { M L }.N else { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L }.  	,  } 
N -> .  	,  else 

I257
S ->  if ( B ) { M L } N.else { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L } N.else { M L }  	,  } 

I258
S ->  T id ( M' para ) { L }.  	,  call void id String while if return int 
S ->  T id ( M' para ) { L }.  	,  } 

I259
S ->  while ( M B ) { M L }.  	,  call void id String while if return int 
S ->  while ( M B ) { M L }.  	,  } 

I260
S ->  if ( B ) { M L } N else.{ M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else.{ M L }  	,  } 

I261
S ->  if ( B ) { M L } N else {.M L }  	,  } 
M -> .  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else {.M L }  	,  call void id String while if return int 

I262
D -> .T id  	,  ; 
S -> .if ( B ) { M L }  	,  call void id String while if return int 
S -> .return E ;  	,  } 
L -> .L M S  	,  } 
L -> .S  	,  } 
S -> .return E ;  	,  call void id String while if return int 
S -> .call id ( Elist ) ;  	,  } 
S -> .id = str ;  	,  } 
S -> .D ;  	,  } 
L -> .L M S  	,  call void id String while if return int 
S -> .if ( B ) { M L }  	,  } 
L -> .S  	,  call void id String while if return int 
T -> .int  	,  id 
S -> .T id ( M' para ) { L }  	,  } 
S -> .D ;  	,  call void id String while if return int 
S -> .T id ( M' para ) { L }  	,  call void id String while if return int 
T -> .void  	,  id 
S -> .while ( M B ) { M L }  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M.L }  	,  } 
S -> .id = E ;  	,  } 
S -> .id = str ;  	,  call void id String while if return int 
S -> .if ( B ) { M L } N else { M L }  	,  call void id String while if return int 
S -> .while ( M B ) { M L }  	,  } 
T -> .String [ const ]  	,  id 
S -> .if ( B ) { M L } N else { M L }  	,  } 
S -> .call id ( Elist ) ;  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M.L }  	,  call void id String while if return int 
S -> .id = E ;  	,  call void id String while if return int 

I263
L ->  L.M S  	,  call void id String while if return int 
L ->  L.M S  	,  } 
S ->  if ( B ) { M L } N else { M L.}  	,  call void id String while if return int 
M -> .  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M L.}  	,  } 

I264
S ->  if ( B ) { M L } N else { M L }.  	,  call void id String while if return int 
S ->  if ( B ) { M L } N else { M L }.  	,  } 

